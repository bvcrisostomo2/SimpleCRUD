
package db2;


import java.sql.*;
import javax.swing.*;
import javax.swing.text.Position;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brian
 */
public class Search extends javax.swing.JFrame {
    JDBC db= new JDBC();
       
    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        tableload(jTable1);
        idload(IdText);
        setLocationRelativeTo(null);
        
        int[] year = new int[2014];
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        BirthDay = new javax.swing.JComboBox();
        BirthMonth = new javax.swing.JComboBox();
        NameText = new javax.swing.JTextField();
        IdText = new javax.swing.JTextField();
        PhoneText = new javax.swing.JTextField();
        AddressText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        SexText = new javax.swing.JComboBox();
        DepartmentText = new javax.swing.JComboBox();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        BirthYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Database");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setText("FULLNAME");

        jLabel2.setText("ID");

        jLabel3.setText("BIRTHDAY");

        jLabel6.setText("PHONE");

        jLabel7.setText("ADDRESS");

        jLabel8.setText("DEPARTMENT");

        BirthDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "22", "26", "27", "28", "29", "30", "31", " " }));

        BirthMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jLabel9.setText("SEX");

        SexText.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        DepartmentText.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IT", "IS", "CS" }));

        Update.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Update.setText("UPDATE");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FULLNAME", "BIRTHDAY", "BIRTHMONTH", "BIRTHYEAR", "PHONE", "ADDRESS", "SEX", "DEPARTMENT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Add.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Add.setText("ADD");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        jLabel4.setText("Day");

        jLabel5.setText("Month");

        jLabel10.setText("Year");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel11.setText("Add");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("1. Fill up the Form");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("2. Press ADD");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel14.setText("Delete");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("1. Select a row below");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("2. Press DELETE");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel17.setText("Update");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("1. Select a corresponding column of the entry");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("2. Press UPDATE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel4)
                .addGap(91, 91, 91)
                .addComponent(jLabel5)
                .addGap(88, 88, 88)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IdText, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(PhoneText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BirthYear))
                            .addComponent(NameText, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(AddressText))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)))
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(DepartmentText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SexText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(142, 142, 142)
                        .addComponent(jLabel19)
                        .addGap(265, 265, 265))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdText, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameText)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PhoneText)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddressText)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SexText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DepartmentText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete)
                        .addGap(9, 9, 9)
                        .addComponent(Update)
                        .addGap(35, 35, 35)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
    /*   try{
     
        //String url = "jdbc:derby://localhost:1527/EmployeeTest";
        //String drivername = "COM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver";       
        //String url = "jdbc:db2://LocalHost:50000/JAVA"; 
      //  String username = "Brian";
     
        
      //  String password = "pass";
      //  Connection con = DriverManager.getConnection(url,username,password);
      //  Statement stmt = con.createStatement();
       // String Query = "DELETE FROM EMPLOYEE WHERE NAME = '"+List1.getSelectedValue()+"'"; 
        
       // stmt.execute(Query);
       // ResultSet rs = db.getData("DELETE FROM EMPLOYEE WHERE NAME = '"+List1.getSelectedValue()+"'");
        JOptionPane.showMessageDialog(null, "Employee Deleted Successfully");
       
        
        
        NameText.setText(null);
        BirthDay.setSelectedItem("DD");
        BirthMonth.setSelectedItem("MM");
        BirthYear.setSelectedItem("YYYY");
        IdText.setText(null);
        PhoneText.setText(null);
        AddressText.setText(null);
        SexText.setSelectedItem("Male");
        DepartmentText.setSelectedIndex(0);
         } 
      
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, ex.toString());
        }*/
        
       db.putData("DELETE FROM EMPLOYEE WHERE ID = '"+IdText.getText()+"'"
        );
       clear();
       tableload(jTable1);
       //idload(IdText);
       JOptionPane.showMessageDialog(null, "Employee Deleted");
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
      /*  try{
       // String url = "jdbc:derby://localhost:1527/EmployeeTest";
        //String drivername = "COM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver";       
        //String url = "jdbc:db2://LocalHost:50000/JAVA";     
       // String username = "Brian";
       // String password = "pass";
       // Connection con = DriverManager.getConnection(url,username,password);
       // Statement stmt = con.createStatement();
       // String Query = "UPDATE EMPLOYEE SET ID = '"+IdText.getText()+"' ,NAME = '"+NameText.getText()+"',BIRTHDAY = '"+BirthDay.getSelectedItem()+"'"
        //        +",BIRTHMONTH = '"+BirthMonth.getSelectedItem()+"',BIRTHYEAR = '"+BirthYear.getSelectedItem()+"',PHONE = '"+PhoneText.getText()+"',ADDRESS = '"+AddressText.getText()+"'"
       //         +",SEX = '"+SexText.getSelectedItem()+"',DEPARTMENT ='"+DepartmentText.getSelectedItem()+"'WHERE NAME = '"+List1.getSelectedValue()+"'";
        
      //  stmt.execute(Query);
        ResultSet rs = db.getData("INSERT INTO EMPLOYEE (ID, NAME, BIRTHDAY, BIRTHMONTH, BIRTHYEAR, PHONE, ADDRESS, SEX, DEPARTMENT) VALUES "
                + "('"+IdText.getText()+"' , '"+NameText.getText()+"' , '"+BirthDay.getSelectedItem()+"' , '"+BirthMonth.getSelectedItem()+"' , '"+BirthYear.getSelectedItem()+"' ,"
                + " '"+PhoneText.getText()+"' , '"+AddressText.getText()+"' , '"+SexText.getSelectedItem()+"' , '"+DepartmentText.getSelectedItem()+"' )"
       );  
       
        JOptionPane.showMessageDialog(null, "Employee Updated Successfully");
        NameText.setText(null);
        BirthDay.setSelectedItem("DD");
        BirthMonth.setSelectedItem("MM");
        BirthYear.setSelectedItem("YYYY");
        IdText.setText(null);
        PhoneText.setText(null);
        AddressText.setText(null);
        SexText.setSelectedItem("Male");
        DepartmentText.setSelectedIndex(0);
         } 
      
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, ex.toString());
        }*/
       db.putData("UPDATE EMPLOYEE SET NAME = '"+IdText.getText()+"' ,NAME = '"+NameText.getText()+"',BIRTHDAY = '"+BirthDay.getSelectedItem()+"'"
       +",BIRTHMONTH = '"+BirthMonth.getSelectedItem()+"',BIRTHYEAR = '"+BirthYear.getText()+"',PHONE = '"+PhoneText.getText()+"',ADDRESS = '"+AddressText.getText()+"'"         
       +",SEX = '"+SexText.getSelectedItem()+"',DEPARTMENT ='"+DepartmentText.getSelectedItem()+"'WHERE ID = '"+IdText.getText()+"'"
        );
       clear();
       tableload(jTable1);
      // idload(IdText);
       JOptionPane.showMessageDialog(null, "Employee Updated");
    }//GEN-LAST:event_UpdateActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
      db.putData("INSERT INTO EMPLOYEE (ID, NAME, BIRTHDAY, BIRTHMONTH, BIRTHYEAR, PHONE, ADDRESS, SEX, DEPARTMENT) VALUES "
                + "('"+IdText.getText()+"' , '"+NameText.getText()+"' , '"+BirthDay.getSelectedItem()+"' , '"+BirthMonth.getSelectedItem()+"' , '"+BirthYear.getText()+"' ,"
                + " '"+PhoneText.getText()+"' , '"+AddressText.getText()+"' , '"+SexText.getSelectedItem()+"' , '"+DepartmentText.getSelectedItem()+"' )"
       );
       clear();
       tableload(jTable1);
       idload(IdText);
       JOptionPane.showMessageDialog(null, "Employee added to database");
    }//GEN-LAST:event_AddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       IdText.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0)));
       NameText.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 1)));
       BirthDay.setSelectedItem(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 2)));
       BirthMonth.setSelectedItem(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 3)));
       BirthYear.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 4)));   
       PhoneText.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 5)));
       AddressText.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 6)));
       SexText.setSelectedItem(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 7)));
       DepartmentText.setSelectedItem(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 8)));
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField AddressText;
    private javax.swing.JComboBox BirthDay;
    private javax.swing.JComboBox BirthMonth;
    private javax.swing.JTextField BirthYear;
    private javax.swing.JButton Delete;
    private javax.swing.JComboBox DepartmentText;
    private javax.swing.JTextField IdText;
    private javax.swing.JTextField NameText;
    private javax.swing.JTextField PhoneText;
    private javax.swing.JComboBox SexText;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        NameText.setText(null);
        BirthDay.setSelectedItem("00");
        BirthMonth.setSelectedItem("00");
        BirthYear.setText("");
        IdText.setText(null);
        PhoneText.setText(null);
        AddressText.setText(null);
        SexText.setSelectedItem("Male");
        DepartmentText.setSelectedItem("IT");
    }

    private void tableload(JTable jt) {
     DefaultTableModel dt = (DefaultTableModel) jt.getModel();
     dt.setRowCount(0);
     try{
     ResultSet rset=db.getData("select *from EMPLOYEE");
     while(rset.next()){
     Vector v= new Vector();
     v.add(rset.getString(1));
     v.add(rset.getString(2));
     v.add(rset.getString(3));
     v.add(rset.getString(4));
     v.add(rset.getString(5));
     v.add(rset.getString(6));  
     v.add(rset.getString(7));
     v.add(rset.getString(8));
     v.add(rset.getString(9));
     dt.addRow(v);
     }
     }catch (Exception ex){
     
            }
     }

    private void idload(JTextField IdText) {
        try {
            ResultSet rset=db.getData("select max(ID) from EMPLOYEE");
            while(rset.next()){
                int i=rset.getInt(1);
                i=i+1;
                IdText.setText(String.valueOf(i));
            }
        } catch (Exception ex) {
           
        }
        
    }
     }


